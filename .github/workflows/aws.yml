name: Deploy to AWS EC2 using Docker

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: syoung1234/minble
  DOCKER_VERSION: v2.0.1
  EC2_HOST: 3.35.28.250
  EC2_SSH_USER: ec2-user
  PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

jobs:
  build-and-push-docker:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Copy files from S3
      run: |
        aws s3 sync s3://${{ secrets.S3_BUCKET_NAME }}/dist/ ./src/main/resources/static/dist/
      env:
        AWS_DEFAULT_REGION: ap-northeast-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Set up application.properties
      run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_VERSION }}

    - name: Login to Docker Hub using Access Token
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push the Docker image
      run: docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_VERSION }}


  deploy-to-ec2:

    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_SSH_USER }}
        key: ${{ env.PRIVATE_KEY }}
        script: |
          echo "Checking for running containers..."
          CONTAINER_ID=$(sudo docker ps -q --filter "name=minble-container")

          if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            echo "Stopping existing container..."
            sudo docker rm $CONTAINER_ID
            echo "docker rm..."
          fi

          echo "Pulling latest image..."
          sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_VERSION }}
          echo "Starting new containers..."
          sudo docker run --name minble-container -d -p 80:8080 -e TZ=Asia/Seoul ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_VERSION }}
          echo "success"
